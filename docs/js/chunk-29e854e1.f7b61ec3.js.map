{"version":3,"sources":["webpack:///./node_modules/core-js/library/modules/es6.string.iterator.js","webpack:///./node_modules/core-js/library/modules/es6.array.is-array.js","webpack:///./node_modules/core-js/library/modules/_create-property.js","webpack:///./node_modules/core-js/library/modules/_iter-define.js","webpack:///./node_modules/core-js/library/modules/_is-array-iter.js","webpack:///./node_modules/core-js/library/modules/_classof.js","webpack:///./node_modules/core-js/library/modules/_iterators.js","webpack:///./node_modules/core-js/library/modules/_iter-detect.js","webpack:///./node_modules/core-js/library/modules/_iter-step.js","webpack:///./node_modules/core-js/library/modules/_object-gpo.js","webpack:///./node_modules/core-js/library/modules/es6.array.from.js","webpack:///./node_modules/core-js/library/fn/is-iterable.js","webpack:///./node_modules/core-js/library/modules/web.dom.iterable.js","webpack:///./node_modules/core-js/library/modules/_string-at.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/array/from.js","webpack:///./node_modules/core-js/library/modules/core.get-iterator-method.js","webpack:///./node_modules/core-js/library/modules/_add-to-unscopables.js","webpack:///./node_modules/core-js/library/modules/_iter-create.js","webpack:///./node_modules/core-js/library/modules/core.is-iterable.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/array/is-array.js","webpack:///./node_modules/core-js/library/modules/_iter-call.js","webpack:///./src/views/Home.vue?d8d0","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray.js","webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/swiper/dist/js/swiper.esm.bundle.js","webpack:///src/views/Home.vue","webpack:///./src/views/Home.vue?493c","webpack:///./src/views/Home.vue","webpack:///./node_modules/core-js/library/modules/es6.array.iterator.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/is-iterable.js","webpack:///./node_modules/core-js/library/fn/array/from.js","webpack:///./src/views/Home.vue?6cf0","webpack:///./node_modules/core-js/library/fn/array/is-array.js"],"names":["$at","__webpack_require__","String","iterated","this","_t","_i","point","O","index","length","value","undefined","done","$export","S","isArray","$defineProperty","createDesc","module","exports","object","f","LIBRARY","redefine","hide","Iterators","$iterCreate","setToStringTag","getPrototypeOf","ITERATOR","BUGGY","keys","FF_ITERATOR","KEYS","VALUES","returnThis","Base","NAME","Constructor","next","DEFAULT","IS_SET","FORCED","methods","key","IteratorPrototype","getMethod","kind","proto","TAG","DEF_VALUES","VALUES_BUG","prototype","$native","$default","$entries","$anyNative","entries","call","Object","name","values","P","F","ArrayProto","Array","it","cof","ARG","arguments","tryGet","e","T","B","callee","SAFE_CLOSING","riter","from","exec","skipClosing","safe","arr","iter","has","toObject","IE_PROTO","ObjectProto","constructor","ctx","isArrayIter","toLength","createProperty","getIterFn","arrayLike","result","step","iterator","C","aLen","mapfn","mapping","iterFn","global","TO_STRING_TAG","DOMIterables","split","i","Collection","toInteger","defined","TO_STRING","that","pos","a","b","s","l","charCodeAt","charAt","slice","classof","getIteratorMethod","create","descriptor","isIterable","hasOwnProperty","anObject","fn","ret","Homevue_type_template_id_26c28c7c_scoped_true_render","_vm","_h","$createElement","_c","_self","staticClass","_l","banner","id","attrs","src","imageUrl","alt","item","href","to","_v","staticRenderFns","_arrayWithoutHoles","is_array_default","arr2","_iterableToArray","is_iterable_default","toString","from_default","_nonIterableSpread","TypeError","_toConsumableArray","doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","self","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","innerHTML","push","match","nodeType","unique","uniqueArray","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","getAttribute","attrName","removeAttr","removeAttribute","dom7_modular_data","el","dom7ElementDataStorage","dataKey","dom7_modular_transform","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","dom7proxy","trigger","evt","detail","bubbles","cancelable","filter","data","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","dom7_modular_outerWidth","includeMargins","styles","offsetWidth","parseFloat","dom7_modular_outerHeight","offsetHeight","dom7_modular_offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","dom7_modular_html","dom7_modular_text","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","dom7_modular_index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","dom7_modular_parent","parentNode","parent","closest","find","foundElements","found","removeChild","toAdd","Class","Methods","outerWidth","outerHeight","offset","forEach","methodName","Utils","obj","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","replace","join","MozTransform","OTransform","MsTransform","msTransform","m41","m42","url","query","params","param","urlToParse","paramsPart","decodeURIComponent","o","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","isObject","extend","swiper_esm_bundle_Support","testDiv","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","observer","passiveListener","supportsPassive","opts","defineProperty","gestures","swiper_esm_bundle_Browser","isSafari","ua","toLowerCase","isIE","isEdge","isUiWebView","test","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","f7proxy","eventHandler","eventsArray","instanceParams","instance","modules","moduleName","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","components","use","static","install","m","installModule","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","swiperSlideSize","centeredSlides","abs","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","isVisible","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","update","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","x","y","z","newProgress","previousTranslate","swiper_esm_bundle_translate","transitionStart","runCallbacks","direction","autoHeight","dir","swiper_esm_bundle_transitionEnd","animating","swiper_esm_bundle_transition","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","nextSnap","slidesPerViewDynamic","slideToIndex","nextTick","swiper_esm_bundle_slide","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","snapTranslate","diff","slideChanged","loopDestroy","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","grabCursor","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","manipulation","swiper_esm_bundle_Device","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","button","isTouched","isMoved","noSwiping","noSwipingSelector","noSwipingClass","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","threshold","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","onTouchMove","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","sqrt","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","freeMode","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","freeModeMomentumBounceRatio","needsLoopFix","freeModeMomentumBounce","freeModeSticky","once","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","onResize","breakpoints","setBreakpoint","newTranslate","min","swiper_esm_bundle_onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","attachEvents","touchEvents","wrapperEl","onClick","touchEventsTarget","start","passiveListeners","passive","move","end","detachEvents","swiper_esm_bundle_events","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","directionChanged","needsReLoop","changeDirection","points","sort","breakpointsInverse","innerWidth","swiper_esm_bundle_breakpoints","addClasses","classNames","suffixes","suffix","containerModifierClass","removeClasses","loadImage","imageEl","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","preloadImages","imagesLoaded","imagesToLoad","updateOnImagesReady","currentSrc","swiper_esm_bundle_images","wasLocked","navigation","checkOverflow$1","defaults","init","uniqueNavElements","wrapperClass","runCallbacksOnInit","prototypes","images","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","newDirection","needUpdate","currentDirection","slideEl","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","options","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","observeSlideChildren","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","numberOfNewSlides","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","isEventSupported","isSupported","element","implementation","hasFeature","Mousewheel","lastScrollTime","PIXEL_STEP","LINE_HEIGHT","PAGE_HEIGHT","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Mousewheel$1","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","onNextClick","onPrevClick","Navigation$1","hideOnClick","hiddenClass","isHidden","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","Pagination$1","number","render","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","opacity","divider","moveDivider","display","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Scrollbar$1","Parallax","p","currentOpacity","currentScale","parallax","setTransform","parallaxEl","$parallaxEl","parallaxDuration","Parallax$1","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","Zoom$1","onTransitionEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Lazy$1","loadOnTransitionStart","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","Controller$1","a11y","role","label","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","disableEl","enableEl","bulletEl","$bulletEl","makeElFocusable","addElRole","addElLabel","paginationBulletMessage","onEnterKey","A11y","notificationClass","updateNavigation","updatePagination","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","slideHistory","History$1","setHistory","HashNavigation","newHash","activeSlideHash","slideHash","watchState","onHashCange","HashNavigation$1","setHash","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","run","paused","waitForTransition","Autoplay$1","disableOnInteraction","pause","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","EffectFade","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","EffectCube","Flip","flipEffect","limitRotation","rotate","rotateY","rotateX","zIndex","EffectFlip","Coverflow","coverflowEffect","center","depth","slideOffset","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","ws","perspectiveOrigin","EffectCoverflow","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","Thumbs$1","swiper_esm_bundle","Homevue_type_script_lang_js_","banners","categoryPic","recommendPic","ad","created","_this","request","then","resp","console","log","adsRes","block","multi_block","pic","concat","$nextTick","initSwiper","$router","views_Homevue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","addToUnscopables","toIObject","_k","Arguments","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Home_vue_vue_type_style_index_0_id_26c28c7c_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Home_vue_vue_type_style_index_0_id_26c28c7c_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","n"],"mappings":"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","file":"js/chunk-29e854e1.f7b61ec3.js","sourcesContent":["'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)\nvar $export = require('./_export');\n\n$export($export.S, 'Array', { isArray: require('./_is-array') });\n","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","module.exports = {};\n","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.is-iterable');\n","require('./es6.array.iterator');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar TO_STRING_TAG = require('./_wks')('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n","module.exports = require(\"core-js/library/fn/array/from\");","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","module.exports = function () { /* empty */ };\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').isIterable = function (it) {\n  var O = Object(it);\n  return O[ITERATOR] !== undefined\n    || '@@iterator' in O\n    // eslint-disable-next-line no-prototype-builtins\n    || Iterators.hasOwnProperty(classof(O));\n};\n","module.exports = require(\"core-js/library/fn/array/is-array\");","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"jp-home\"},[_c('div',{staticClass:\"swiper-container\"},[_c('div',{staticClass:\"swiper-wrapper\"},_vm._l((_vm.banners),function(banner){return _c('div',{key:banner.id,staticClass:\"swiper-slide\"},[_c('img',{attrs:{\"src\":banner.imageUrl,\"alt\":\"\"}})])}),0),_c('div',{staticClass:\"swiper-pagination\"})]),_c('div',{staticClass:\"jp-home-category\"},_vm._l((_vm.categoryPic),function(item,index){return _c('a',{key:index,attrs:{\"href\":\"javascript:;\"}},[_c('img',{attrs:{\"src\":item,\"alt\":\"\"}})])}),0),_c('div',{staticClass:\"jp-home-recommend\"},_vm._l((_vm.recommendPic),function(item,index){return _c('a',{key:index,attrs:{\"href\":\"javascript:;\"}},[_c('img',{attrs:{\"src\":item,\"alt\":\"\"}})])}),0),_c('div',{staticClass:\"jp-home-ad\"},_vm._l((_vm.ad),function(item,index){return _c('a',{key:index,attrs:{\"href\":\"javascript:;\"}},[_c('img',{attrs:{\"src\":item,\"alt\":\"\"}})])}),0),_c('div',{staticClass:\"jp-home-toggle\"},[_c('router-link',{attrs:{\"to\":\"/home/4210\"}},[_vm._v(\"精选专场\")]),_c('router-link',{attrs:{\"to\":\"/home/4219\"}},[_vm._v(\"精选单品\")])],1),_c('div',{staticClass:\"jp-home-goodsList\"},[_c('router-view')],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import _Array$isArray from \"../../core-js/array/is-array\";\nexport default function _arrayWithoutHoles(arr) {\n  if (_Array$isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","import _Array$from from \"../../core-js/array/from\";\nimport _isIterable from \"../../core-js/is-iterable\";\nexport default function _iterableToArray(iter) {\n  if (_isIterable(Object(iter)) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return _Array$from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n","/**\n * Dom7 2.1.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2019, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 11, 2019\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n// eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n","/**\n * Swiper 4.5.0\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2019 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: February 22, 2019\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition as transition$1, on, off, trigger, transitionEnd as transitionEnd$1, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition: transition$1,\n  on,\n  off,\n  trigger,\n  transitionEnd: transitionEnd$1,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!((window.navigator.maxTouchPoints > 0) || ('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent || ('maxTouchPoints' in window.navigator && window.navigator.maxTouchPoints > 0)),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles.length; i += 1) {\n        if (styles[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index = swiper.activeIndex + i;\n      if (index > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index, el) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) appendSlides.push(el);\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data.formElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      data.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\n/* eslint no-param-reassign: \"off\" */\n\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    if (currentDirection === 'vertical') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}vertical wp8-vertical`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n    if (currentDirection === 'horizontal') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}horizontal wp8-horizontal`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  },\n  renderSlide(slide, index) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slides) {\n    const swiper = this;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    swiper.virtual.update(true);\n  },\n  prependSlide(slides) {\n    const swiper = this;\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  },\n  removeSlide(slidesIndexes) {\n    const swiper = this;\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(activeIndex, 0);\n  },\n  removeAllSlides() {\n    const swiper = this;\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(0, 0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        removeSlide: Virtual.removeSlide.bind(swiper),\n        removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        let isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow', swiper);\n        } else {\n          swiper.emit('navigationHide', swiper);\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow', swiper);\n        } else {\n          swiper.emit('paginationHide', swiper);\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n      : swiper.slides.eq(index);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text) {\n    return text.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n","<template>\r\n  <div class=\"jp-home\">\r\n    <!-- 轮播图 -->\r\n    <div class=\"swiper-container\">\r\n      <div class=\"swiper-wrapper\">\r\n        <div class=\"swiper-slide\"\r\n          v-for=\"banner in banners\"\r\n          :key=\"banner.id\"\r\n        >\r\n          <img :src=\"banner.imageUrl\" alt=\"\">\r\n        </div>\r\n      </div>\r\n      <!-- 分页器 -->\r\n      <div class=\"swiper-pagination\"></div>\r\n    </div>\r\n    <!-- 分类项目 -->\r\n    <div class=\"jp-home-category\">\r\n      <a href=\"javascript:;\"\r\n        v-for=\"(item,index) in categoryPic\"\r\n        :key=\"index\"\r\n      >\r\n        <img :src=\"item\" alt=\"\">\r\n      </a>\r\n    </div>\r\n    <!-- 推荐项目 -->\r\n    <div class=\"jp-home-recommend\">\r\n      <a href=\"javascript:;\"\r\n        v-for=\"(item,index) in recommendPic\"\r\n        :key=\"index\"\r\n      >\r\n        <img :src=\"item\" alt=\"\">\r\n      </a>\r\n    </div>\r\n    <!-- 618广告图片 -->\r\n    <div class=\"jp-home-ad\">\r\n      <a href=\"javascript:;\"\r\n        v-for=\"(item,index) in ad\"\r\n        :key=\"index\"\r\n      >\r\n        <img :src=\"item\" alt=\"\">\r\n      </a>\r\n    </div>\r\n    <!-- 切换项目 -->\r\n    <div class=\"jp-home-toggle\">\r\n      <router-link to=\"/home/4210\">精选专场</router-link>\r\n      <router-link to=\"/home/4219\">精选单品</router-link>\r\n    </div>\r\n    <!-- 商品列表 -->\r\n    <div class=\"jp-home-goodsList\">\r\n      <router-view></router-view>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\t\r\nimport Swiper from 'swiper'\r\nimport swiperCss from 'swiper/dist/css/swiper.min.css'\t\r\nimport * as ajax from '@/request'  //index可以省略，默认找index\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      banners: [],\r\n      categoryPic: [],\r\n      recommendPic: [\r\n        'https://s2.juancdn.com/jas/190608/1/a/5cfb0e4bb6f8ea66312fcaad_540x656.gif',\r\n        'https://goods3.juancdn.com/jas/190608/4/1/5cfb0e7133b0895a882eb3c9_540x328.png?iopcmd=convert&Q=85&dst=png',\r\n        'https://goods2.juancdn.com/jas/190608/3/9/5cfb0ea133b0895875485380_540x328.png?imageMogr2/quality/85!/format/png'\r\n      ],\r\n      ad: []\r\n    }\r\n  },\r\n  created () {\r\n    ajax.getCategory().then(resp => {\r\n      console.log(resp.data.adsRes.block[0].multi_block[0].data)\r\n      this.categoryPic = resp.data.adsRes.block[0].multi_block[0].data.map(item => item.child[0].pic)\r\n      this.ad = resp.data.adsRes.block[0].multi_block[1].data.map(item => {\r\n        return item.child[0].pic\r\n      })\r\n      this.ad = [...this.ad,resp.data.adsRes.block[0].multi_block[3].data.map(item => {\r\n        return item.child[0].pic\r\n      })[0]]\r\n\r\n    })\r\n    ajax.getHome().then(resp => {\r\n      this.banners = resp.data.data.banners\r\n      this.$nextTick().then(() => {\r\n        this.initSwiper()\r\n      })\r\n    })\r\n    this.$router.push('/home/4210')\r\n  },\r\n  methods: {\r\n    initSwiper () {\r\n      var mySwiper = new Swiper('.swiper-container', {\r\n        autoplay: true,\r\n        loop: true, // 循环模式选项\r\n        // 如果需要分页器\r\n        pagination: {\r\n          el: '.swiper-pagination',\r\n        }\r\n      })\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.swiper-container {\r\n  height: 0;\r\n  padding-top: (420 / 1080) * 100%;\r\n  width: 100%;\r\n\r\n  .swiper-wrapper {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n  }\r\n  \r\n  img {\r\n    width: 100%;\r\n    vertical-align: top;\r\n  }\r\n}\r\n\r\n.jp-home {\r\n  width: 100%;\r\n  \r\n  &-category {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    \r\n    img {\r\n      width: 100%;\r\n      vertical-align: top;\r\n    }\r\n  }\r\n  \r\n  &-recommend {\r\n    width: 100%;\r\n    \r\n    a {\r\n      float: left;\r\n      \r\n      &:nth-child(1),\r\n      &:nth-child(2),\r\n      &:nth-child(3) {\r\n        width: 50%\r\n      }\r\n      \r\n      img {\r\n        width: 100%;\r\n        vertical-align: top;\r\n      }\r\n    }\r\n  }\r\n  \r\n  &-ad {\r\n    width: 100%;\r\n    background: #f4f4f8;\r\n    a {\r\n      width: 100%;\r\n      display: inline-block;\r\n      \r\n      img {\r\n        width: 100%;\r\n      }\r\n      \r\n      &:nth-child(2) {\r\n        margin: 10px 0;\r\n      }\r\n    }\r\n    \r\n  }\r\n  \r\n  &-toggle {\r\n    width: 100%;\r\n    height: 50px;\r\n    line-height: 50px;\r\n    background: #fff;\r\n    margin-bottom: 4px;\r\n    \r\n    a {\r\n      height: 100%;\r\n      color: #333;\r\n      margin: 0 8px;\r\n      display: inline-block;\r\n      text-decoration: none;\r\n    }\r\n    \r\n    .router-link-exact-active,\r\n    .router-link-active {\r\n      border-bottom: 2px solid #ff464e;\r\n      color: #ff464e;\r\n    }\r\n    \r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=26c28c7c&scoped=true&\"\nimport script from \"./Home.vue?vue&type=script&lang=js&\"\nexport * from \"./Home.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Home.vue?vue&type=style&index=0&id=26c28c7c&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"26c28c7c\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","module.exports = require(\"core-js/library/fn/is-iterable\");","require('../../modules/es6.string.iterator');\nrequire('../../modules/es6.array.from');\nmodule.exports = require('../../modules/_core').Array.from;\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&id=26c28c7c&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&id=26c28c7c&lang=scss&scoped=true&\"","require('../../modules/es6.array.is-array');\nmodule.exports = require('../../modules/_core').Array.isArray;\n"],"sourceRoot":""}